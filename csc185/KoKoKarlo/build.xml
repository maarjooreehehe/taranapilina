<?xml version="1.0" encoding="UTF-8"?>

<project name="KoKoKarlo" basedir="." default="usage">
	<property file="build.properties" />

	<property name="name" value="KoKoKarlo" />
	<property name="app.dir" value="${user.home}/csc185/${name}" />
	<property name="src.dir" value="${app.dir}/src" />
	<property name="web.dir" value="${app.dir}/WebContent" />
	<property name="build.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="test.dir" value="${app.dir}/test" />


	<path id="master-classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<!-- We need the servlet API classes: -->
		<!-- * for Tomcat 5/6 use servlet-api.jar -->
		<!-- * for other app servers - check the docs -->
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="build     --> Build the application" />
		<echo message="deploy    --> Deploy application as directory" />
		<echo message="deploywar --> Deploy application as a WAR file" />
		<echo message="install   --> Install application in Tomcat" />
		<echo message="reload    --> Reload application in Tomcat" />
		<echo message="start     --> Start Tomcat application" />
		<echo message="stop      --> Stop Tomcat application" />
		<echo message="list      --> List Tomcat applications" />
		<echo message="" />
	</target>

	<target name="build" description="Compile main source tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.7" target="1.7" debug="true"
			deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="buildtests" description="Compile test tree java files">
		<mkdir dir="${build.dir}" />
		<javac destdir="${build.dir}" source="1.7" target="1.7" debug="true"
			deprecation="false" optimize="false" failonerror="true">
			<src path="${test.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="tests" depends="build, buildtests" description="Run tests">
		<junit printsummary="on" fork="false" haltonfailure="false"
			failureproperty="tests.failed" showoutput="true">
			<classpath refid="master-classpath" />
			<formatter type="brief" usefile="false" />

			<batchtest>
				<fileset dir="${build.dir}">
					<include name="**/*Tests.*" />
				</fileset>
			</batchtest>

		</junit>

		<fail if="tests.failed">
			tests.failed=${tests.failed}
			***********************************************************
			***********************************************************
			**** One or more tests failed! Check the output ... ****
			***********************************************************
			***********************************************************
		</fail>
	</target>
	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="deploywar" depends="build"
		description="Deploy application as a WAR file">
		<war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->

	<path id="catalina-ant-classpath">
		<fileset dir="${appserver.lib}">
			<include name="catalina-ant.jar" />
			<include name="tomcat-coyote.jar" />
			<include name="tomcat-util.jar" />
		</fileset>
		<fileset dir="${appserver.home}/bin">
			<include name="tomcat-juli.jar" />
		</fileset>
	</path>

	<taskdef name="install" classname="org.apache.catalina.ant.DeployTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="findleaks" classname="org.apache.catalina.ant.FindLeaksTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="start" classname="org.apache.catalina.ant.StartTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="stop" classname="org.apache.catalina.ant.StopTask"
		classpathref="catalina-ant-classpath" />
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask"
		classpathref="catalina-ant-classpath" />

	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>

	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}"
			password="${tomcat.manager.password}" />
	</target>

	<!-- End Tomcat tasks -->

</project>